% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrix_heatmap.R
\name{df_heatmap}
\alias{df_heatmap}
\title{Create heatmap plot for a data.frame}
\usage{
df_heatmap(
  plot_df,
  x,
  y,
  fill,
  fill_palette = "plasma",
  xaxis_labels = TRUE,
  yaxis_labels = TRUE,
  ...
)
}
\arguments{
\item{plot_df}{data.frame  data to plot}

\item{x}{character   Name of the variable to plot on the x-axis}

\item{y}{character   Name of the variable to plot on the y-axis}

\item{fill}{character   Name of the variable to use for the fill colour}

\item{fill_palette}{character   Name of the fill palette to use.
Must be one of 'viridis', 'plasma', 'magma', 'inferno', 'cividis'}

\item{xaxis_labels}{logical/character   default=TRUE, FALSE means labels are not printed
if the value is a character vector of the same length as the levels of the x variable
these values are used instead}

\item{yaxis_labels}{logical/character   default=TRUE, FALSE means labels are not printed
if the value is a character vector of the same length as the levels of the y variable
these values are used instead}

\item{...}{Other arguments passed on to \code{\link{theme_heatmap()}}}
}
\value{
plot - ggplot2 object
}
\description{
\code{df_heatmap} produces a ggplot heatmap from a data.frame
}
\details{
This function takes a data.frame and creates a heatmap plot.
The function assumes the data is in long form with a column for
the x variable, a column for the y variable and a column for the data values.
By default x and y axis labels are printed.
}
\examples{

set.seed(20962)
test_data_cat <- data.frame(cols = factor(rep(LETTERS[1:10], 10)),
  rows = factor(rep(1:10, each = 10), levels = 10:1),
  fill = runif(100))

df_heatmap(test_data_cat, x = "cols", y = "rows", fill = "fill")

df_heatmap(test_data_cat, x = "cols", y = "rows", fill = "fill",
    fill_palette = "inferno", xaxis_labels = FALSE, yaxis_labels = FALSE)

df_heatmap(test_data_cat, x = "cols", y = "rows", fill = "fill",
    fill_palette = "inferno", xaxis_labels = letters[1:10], yaxis_labels = LETTERS[1:10])

}
